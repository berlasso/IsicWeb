@model ISIC.Entities.AFIS
@{ string url = Session["CurrentUrl"] != null ? Session["CurrentUrl"].ToString() : @Url.Action("Index"); }

@using (Ajax.BeginForm("GuardarDatosAFIS", "Antecedentes",
  new AjaxOptions
                {
                    UpdateTargetId = "divValidation",
                    HttpMethod = "Post",
                    OnBegin = "onGuardarBegin",
                    OnComplete = "onGuardarComplete",
                    OnSuccess = "onGuardarSuccess"
                },
                new { id = "frmGuardarDatosAfis" }))
{    @Html.AntiForgeryToken()

    <div class=" center wow fadeInDown animated tile-light">
        <h3>
            Carga datos del AFIS
        </h3>
    </div>


    if (Model != null)
    {
        Html.RenderAction("MostrarDatosImputado", "Antecedentes", new { idIdgxprontuario = Model.Id });

    }
    <div class="panel panel-default tile wow fadeInDown animated" style="margin-bottom: 80px;">
        <div class="panel-heading">
            @if (Model.Id > 0)
            {
                <h4>Modificación Datos del AFIS</h4>
            }
            else
            {
                <h4>Carga Nuevos Datos del AFIS</h4>
            }
        </div>
        <div class="panel-body">
         

            <div class="row wow fadeInDown animated">

                <div class="col-xs-4">
                    @Html.LabelFor(model => model.NIF, htmlAttributes: new { @class = "control-label  " })
                    @Html.EditorFor(model => model.NIF, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NIF, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label  " })
                    @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })


               
                </div>

                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label  " })
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row wow fadeInDown animated">

                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label  " })
                    @Html.DropDownListFor(model => model.Sexo.Id, ViewBag.SexoList as IEnumerable<SelectListItem>, new { @class = "form-control" })

                  
                </div>

                <div class="col-xs-4">
                    @Html.LabelFor(model => model.DNI, htmlAttributes: new { @class = "control-label  " })
                    @Html.EditorFor(model => model.DNI, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DNI, "", new { @class = "text-danger" })
                </div>

                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Clase, htmlAttributes: new { @class = "control-label  " })
                    @Html.EditorFor(model => model.Clase, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Clase, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row wow fadeInDown animated">

           
           
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.CTL, htmlAttributes: new { @class = "control-label  " })
                    @Html.EditorFor(model => model.CTL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CTL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-12" id="divValidation">
                    @Html.HiddenFor(model=>model.Prontuario.ProntuarioNro)
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                </div>
            </div>
           
        </div>
    </div>
    <nav class="navbar navbar-default navbar-fixed-bottom tile-dark">
        <div class="row">
            <div class="  col-sm-3 col-xs-4">
                <a id="btnVolver" class="btn btn-lg btn-alt volver" href='@url' title=" volver" onclick="showPageLoadingSpinner();" type="button">
                    Volver
                </a>
                

            </div>
            <div class="col-md-3 col-md-offset-2 col-sm-4 col-xs-8">
                <div class="row ">
                    <div class="col-md-6 col-sm-6 col-xs-6">
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-6">
                        <input type="submit" value="Guardar" class="btn btn-alt btn-lg" />

                    </div>
                </div>
            </div>

        </div>

    </nav>
}

@section scripts
{
    <script>
        //GUARDAR DATOS AFIS
        function onGuardarBegin() {
            loader("Guardando, espere un momento...");
        }

        function onGuardarComplete() {
            $.unblockUI();
        }

        function onGuardarSuccess(data) {
            if (data == "") {
                //alertify.success("Alta exitosa");
                alertify.alert("Exito", "<i class='Exito'>Carga Exitosa</i>").set({
                    onclose: function () {
                        showPageLoadingSpinner();
                    location.href = '@url';

                }});
                
                //$("#btnNuevoDelito").removeClass("hidden");
                //$("#cartelSinDelitos").addClass("hidden");
                //$("#Id").val($("#idIdgxdatospersonales").val());

            } else {
                alertify.error("Error en la carga");
                //$("#btnNuevoDelito").addClass("hidden");
                $("#cartelSinDelitos").removeClass("hidden");
            }
        }
    

        $(document).ready(function () {
            $("#navFooter").hide();
        });
    </script>
    }
