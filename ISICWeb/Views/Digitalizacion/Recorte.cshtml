
@{
    ViewBag.Title = "Recorte";
}

<h2>Recorte</h2>
<svg xmlns="http://www.w3.org/2000/svg" width="500" height="500" id="mycanvas">
    <clipPath id="clipRect">
        <rect width="400" height="300" x="221" y="20"  style="fill:rgb(0,0,255);stroke-width:3;stroke:rgb(0,0,0)" transform="rotate(45)" />
      
    </clipPath>
    <image xlink:href="../Images/decadactilar.jpeg" x="0" y="0" height="750" width="1900" clip-path="url(#clipRect)" />
</svg>

<div class="row">

    <button type="button" id="guardar" onclick="guardarHuellas();" class="btn btn-default">Salva Huellas Dactilares</button>
    <canvas id="c" width="1900" height="750" style="margin-top :0px; margin-left:0px !important ;border: 1px solid #000000;"></canvas>
    <img id="huella" style="margin-top :200px;"  />
   
</div>

<script type="text/javascript">

    function guardarHuella() {
      
        canvg(document.getElementById('drawingArea'), document.getElementById("mycanvas").innerHTML);

        canvg('canvas', 'file.svg', { ignoreMouse: true, ignoreAnimation: true });
       
    }
    var canvas = new fabric.Canvas('c');
    var crec = new fabric.Canvas('crec');

    var clipRect1 = new fabric.Rect({
        originX: 'left',
        originY: 'top',
        left: 230,
        top: 180,
        width: 350,
        height: 360,
        angle: 45,
        fill: '#DDD',
        stroke: 'black',
        strokeWidth: 2,
        selectable: false
    });

    clipRect1.set({
        clipFor: 'pug'
    });
    canvas.add(clipRect1);


  var clipRect2 = new fabric.Rect({
        originX: 'left',
        originY: 'top',
        left: 360,
        top: 180,
        width: 300,
        height: 360,
        fill:  '#DDD' ,
        angle:45,
        stroke: 'red',
        strokeWidth: 2,
        selectable: false
    });

    clipRect2.set({
        clipFor: 'pug2'
    });
    canvas.add(clipRect2)

     function degToRad(degrees) {
        return degrees * (Math.PI / 180);
    }

    function findByClipName(name) {
        return _(canvas.getObjects()).where({
            clipFor: name
        }).first()
    }

    var clipByName = function (ctx) {
        var clipRect = findByClipName(this.clipName);
        var scaleXTo1 = (1 / this.scaleX);
        var scaleYTo1 = (1 / this.scaleY);
        ctx.save();
        /*    ctx.translate(0, 0);
        ctx.rotate(degToRad(this.angle * -1));
      ctx.scale(scaleXTo1, scaleYTo1);*/
        ctx.beginPath();
        ctx.rect(
            clipRect.left,
            clipRect.top ,
            clipRect.width,
            clipRect.height
        );
        ctx.closePath();
        ctx.restore();
    }


    var pugImg = new Image();
 
  /*  pugImg.onload = function (img) {
        var pug = new fabric.Image(pugImg, {
            left: 0,
            top: 0,
         
            clipName: 'pug',
            clipTo: function (ctx) {
                return _.bind(clipByName, pug)(ctx);
            }
        });
        crec.add(pug);
    
    };
    pugImg.src = '/Images/decadactilar.jpeg';
  */

    fabric.Image.fromURL('/Images/decadactilar.jpeg', function (oImg) {
        // scale image down, and flip it, before adding it onto canvas
        //    oImg.scale(0.5).setFlipX(true);
        canvas.add(oImg);
        // Para que no pueda correr la imagen de la huella
        oImg.set('selectable', false);
       
    });
    var pugImg = canvas.item(1);
    var imagenRecorte;
canvas.clipTo = function (ctx) {
      
        clipRect1.render(ctx);
        clipRect2.render(ctx);
     
    }
   
   canvas.renderAll();
  
   $("#huella").attr('src', canvas.toDataURL('jpeg'));

  
  function copy() {
      var ctx = c.getContext("2d");
      var imgData = ctx.getImageData( 230, 180, 350,360);
      ctx.putImageData(imgData, 500, 70);
 /*    $("#huella").attr('src',canvas.toDataURL('png'));*/
         $("#huella").attr('src',imgData.data);

  }

  console.log(JSON.stringify(canvas));
  console.log(canvas.toDataURL('png'));
  console.log(canvas.toObject);




 /*   var pugImg2 = new Image();
    pugImg2.src = '/Images/decadactilar.jpeg';
    pugImg2.onload = function (img) {
        var pug2 = new fabric.Image(pugImg, {
            left: 100,
            top: 0,
            clipName: 'pug2',
            clipTo: function (ctx) {
                return _.bind(clipByName, pug2)(ctx)
            }
        });
       crec.add(pug2);
       
    };*/
 </script>