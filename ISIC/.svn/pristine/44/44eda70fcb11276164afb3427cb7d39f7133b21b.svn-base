@model ISICWeb.Areas.Otip.Models.DatosGeneralesViewModel



@{
    bool esSoloDetalle = ViewBag.EsSoloDetalle ?? false;
}
<section id="DatosSomaticos">

    <div class="panel panel-default tile wow fadeInDown animated">
        <div class="panel-heading">
            @*<div class="left wow fadeInDown animated" style="visibility: visible; animation-name: fadeInDown;">*@
            <h2>Datos Somáticos</h2>
        </div>
        <div class="panel-body">
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Robustez)
                    @{
                        var robustez = Model.RobustezList.First(m => m.Value == Model.Robustez).Text;
                        @Html.Label(robustez);
                    }

                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.ColorPiel)
                    @{
                        var colorpiel = Model.ColorPielList.First(m => m.Value == Model.ColorPiel).Text;
                        @Html.Label(colorpiel);
                    }
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.ColorOjos)
                    @{
                        var colorojos = Model.ColorOjosList.First(m => m.Value == Model.ColorOjos).Text;
                        @Html.Label(colorojos);
                    }

                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.ColorCabellos)
                    @{
                        var colorcabellos = Model.ColorCabellosList.First(m => m.Value == Model.ColorCabellos).Text;
                        @Html.Label(colorcabellos);
                    }
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.TipoCabello)
                    @{
                        var tipocabello = Model.TipoCabelloList.First(m => m.Value == Model.TipoCabello).Text;
                        @Html.Label(tipocabello);
                    }
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.TipoCalvicie)
                    @{
                        var tipocalvicie = Model.TipoCalvicieList.First(m => m.Value == Model.TipoCalvicie).Text;
                        @Html.Label(tipocalvicie);
                    }
                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.FormaCara)
                    @{
                        var formacara = Model.FormaCaraList.First(m => m.Value == Model.FormaCara).Text;
                        @Html.Label(formacara);
                    }
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.DimensionCeja)
                    @{
                        var dimensionceja = Model.DimensionCejaList.First(m => m.Value == Model.DimensionCeja).Text;
                        @Html.Label(dimensionceja);
                    }
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.TipoCeja)
                    @{
                        var tipoceja = Model.TipoCejaList.First(m => m.Value == Model.TipoCeja).Text;
                        @Html.Label(tipoceja);
                    }
                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.FormaMenton)
                    @{
                        var formamenton = Model.FormaMentonList.First(m => m.Value == Model.FormaMenton).Text;
                        @Html.Label(formamenton);
                    }
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.FormaOreja)
                    @{
                        var formaoreja = Model.FormaOrejaList.First(m => m.Value == Model.FormaOreja).Text;
                        @Html.Label(formaoreja);
                    }
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.FormaNariz)
                    @{
                        var formanariz = Model.FormaNarizList.First(m => m.Value == Model.FormaNariz).Text;
                        @Html.Label(formanariz);
                    }
                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.FormaBoca)
                    @{
                        var formaboca = Model.FormaBocaList.First(m => m.Value == Model.FormaBoca).Text;
                        @Html.Label(formaboca);
                    }
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.FormaLabioInferior)
                    @{
                        var formalabioinferior = Model.FormaLabioInferiorList.First(m => m.Value == Model.FormaLabioInferior).Text;
                        @Html.Label(formalabioinferior);
                    }
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.FormaLabioSuperior)
                    @{
                        var formalabiosuperior = Model.FormaLabioSuperiorList.First(m => m.Value == Model.FormaLabioSuperior).Text;
                        @Html.Label(formalabiosuperior);
                    }
                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Estatura)
                    
                    @Html.DisplayFor(m=>m.Estatura)
                    
                </div>
                <div class="col-xs-4">

                </div>
                <div class="col-xs-4">

                </div>
            </div>
        </div>
    </div>

</section>
