@using ISIC.Entities
@model ISICWeb.Areas.Otip.Models.DatosGeneralesViewModel




<section id="DatosGenerales">

    <div class="panel panel-default tile wow fadeInDown animated">
        <div class="panel-heading">
            @*<div class="left wow fadeInDown animated" style="visibility: visible; animation-name: fadeInDown;">*@
            <h2>Datos Generales</h2>
        </div>
        <div class="panel-body">
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">

                <div class="col-xs-4">
                    @Html.LabelFor(model => model.CodBarras)
                    @*@Html.EditorFor(m => m.CodBarras, !esSoloDetalle && Model.Id == 0 ? new { htmlAttributes = new { @class = "form-control required", data_val_codexistente = "Codigo de barras existente en la base del SIC" } } : new { htmlAttributes = new { @class = "form-control", @readonly = (esSoloDetalle) ? "readonly" : "false" } } as object)*@
                    @Html.DisplayFor(m => m.CodBarras, new { @class = "form-control" })
                </div>
                <div class="col-xs-4">
                </div>
                <div class="col-xs-4">
                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.IPP)
                    @*<div class="form-group">
                        <div class='input-group '>*@
                    @*@Html.EditorFor(m => m.IPP, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.IPP, new { @class = "form-control" })
                    @*<span class="input-group-addon btn btn-alt" id="btnBuscarIpp">
                            <span class="flaticon-zoom22"></span>
                        </span>*@
                    @*</div>
                        </div>*@



                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Apellido)
                    @*@Html.EditorFor(m => m.Apellido, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.Apellido, new { @class = "form-control" })
                    @*@Html.ValidationMessageFor(m => m.Apellido)*@
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Nombres)
                    @*@Html.EditorFor(m => m.Nombres, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.Nombres, new { @class = "form-control" })
                    @*@Html.ValidationMessageFor(m => m.Nombres)*@
                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Apodos)
                    @*@Html.EditorFor(m => m.Apodos, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.Apodos, new { @class = "form-control" })
                    @*@Html.ValidationMessageFor(m => m.Apodos)*@
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.OtrosNombres)
                    @*@Html.EditorFor(m => m.OtrosNombres, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.OtrosNombres, new { @class = "form-control" })
                    @*@Html.ValidationMessageFor(m => m.OtrosNombres)*@
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.FechaNacimiento)

                    <div class="form-group">
                        @*<div class='input-group date datepicker'>*@
                        @*@Html.EditorFor(m => m.FechaNacimiento, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control  ", @placeholder = "dd/mm/aaaa", data_val_isdatebefore = "La fecha de nacimiento debe ser anterior a la del delito", data_val_isdatebefore_allowequaldates = "True", data_val_isdatebefore_propertytested = "FechaDelito" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                        @Html.DisplayFor(m => m.FechaNacimiento, new { @class = "form-control" })
                        @*<span class="input-group-addon btn btn-alt">
                                <span class="flaticon-calendar48"></span>
                            </span>*@
                    </div>
                </div>



            </div>




            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-8">
                    @Html.LabelFor(model => model.Delito)
                    @*@Html.EditorFor(m => m.Delito, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.Delito, new { @class = "form-control" })

                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.FechaDelito)
                    @Html.DisplayFor(m => m.FechaDelito, new { @class = "form-control" })
                    @*<div class="form-group">
                        <div class='input-group date datepicker'>*@
                    @*@Html.EditorFor(m => m.FechaDelito, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control  ", @placeholder = "dd/mm/aaaa" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @*<span class="input-group-addon btn btn-alt">
                                    <span class="flaticon-calendar48"></span>
                                </span>
                            </div>
                        </div>*@

                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Conyuge)
                    @*@Html.EditorFor(m => m.Conyuge, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.Conyuge, new { @class = "form-control" })
                    )
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.EstadoCivil)

                    @{
                        var estCivil = Model.EstadoCivilList.First(m => m.Value == Model.EstadoCivil).Text;
                        @Html.Label(estCivil);
                    }
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Telefono)
                    @*@Html.EditorFor(m => m.Telefono, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.Telefono, new { @class = "form-control" })

                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Madre)
                    @*@Html.EditorFor(m => m.Madre, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.Madre, new { @class = "form-control" })
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Padre)
                    @*@Html.EditorFor(m => m.Padre, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.Padre, new { @class = "form-control" })
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Sexo)
                    )
                    @{
                        var sexo = Model.SexoList.First(m => m.Value == Model.Sexo).Text;
                        @Html.Label(sexo);
                    }

                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.LocalidadNacimiento)
                    @*@Html.TextBox("LocalidadNacimiento", Model.LocalidadNacimiento, !esSoloDetalle ? new { @class = "form-control selectize-localidad" } : new { @class = "form-control", @readonly = "readonly" } as object)*@
                    @Html.DisplayFor(m => m.LocalidadNacimiento, new { @class = "form-control" })

                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.ProvinciaNacimiento)

                    @if (!String.IsNullOrEmpty(Model.ProvinciaNacimiento))
                    {
                        var provNac = Model.ProvinciaList.FirstOrDefault(m => m.Value == Model.ProvinciaNacimiento).Text;
                        @Html.Label(provNac);


                    }

                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.PaisNacimiento)

                    @{
                        if (Model.PaisNacimiento != "")
                        {
                            var paisNac = Model.PaisList.FirstOrDefault(m => m.Value == Model.PaisNacimiento).Text;
                            @Html.Label(paisNac)
                            ;
                        }
                    }

                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Fiscal)
                    @*@Html.EditorFor(m => m.Fiscal, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.Fiscal, new { @class = "form-control" })

                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Instruccion)

                    @{
                        var instruccion = Model.InstruccionList.First(m => m.Value == Model.Instruccion).Text;
                        @Html.Label(instruccion);
                    }
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Profesion)
                    @*@Html.EditorFor(m => m.Profesion, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.Profesion, new { @class = "form-control" })

                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.ModusOperandi)
                    @*@Html.TextBoxFor(m => m.ModusOperandi, !esSoloDetalle ? new { @class = "form-control " } : new { @class = "form-control", @readonly = "readonly" } as object)*@
                    @Html.DisplayFor(m => m.ModusOperandi, new { @class = "form-control" })

                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.FiscaliaGeneral)

                    @{
                        var fiscalia = Model.FiscaliaGeneralList.First(m => m.Value == Model.FiscaliaGeneral).Text;
                        @Html.Label(fiscalia);
                    }

                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.UFI)
                    @*@Html.EditorFor(m => m.UFI, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.UFI, new { @class = "form-control" })

                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.TipoDocumento)

                    @{
                        var tipoDoc = Model.TipoDocumentoList.First(m => m.Value == Model.TipoDocumento).Text;
                        @Html.Label(tipoDoc);
                    }
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.NumeroDocumento)
                    @*@Html.EditorFor(m => m.NumeroDocumento, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.NumeroDocumento, new { @class = "form-control" })
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.JuzgadoGarantias)
                    @*@Html.EditorFor(m => m.JuzgadoGarantias, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.JuzgadoGarantias, new { @class = "form-control" })
                </div>

            </div>
        </div>

    </div>
</section>





<section id="DomicilioImputado">

    <div class="panel panel-default tile wow fadeInDown animated">
        <div class="panel-heading">
            @*<div class="left wow fadeInDown animated" style="visibility: visible; animation-name: fadeInDown;">*@
            <h2>Domicilio del Imputado</h2>
        </div>
        <div class="panel-body">
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Calle)
                    @*@Html.EditorFor(m => m.Calle, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.Calle, new { @class = "form-control" })
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.EntreCalle)
                    @*@Html.EditorFor(m => m.EntreCalle, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.EntreCalle, new { @class = "form-control" })
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.EntreCalle2)
                    @*@Html.EditorFor(m => m.EntreCalle2, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.EntreCalle2, new { @class = "form-control" })
                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.NroH)
                    @*@Html.EditorFor(m => m.NroH, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.NroH, new { @class = "form-control" })
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.DeptoH)
                    @*@Html.EditorFor(m => m.DeptoH, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.DeptoH, new { @class = "form-control" })
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.PisoH)
                    @*@Html.EditorFor(m => m.PisoH, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.PisoH, new { @class = "form-control" })
                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Localidad)
                    @*@Html.TextBox("Localidad", Model.Localidad, !esSoloDetalle ? new { @class = "form-control selectize-localidad" } : new { @class = "form-control", @readonly = "readonly" } as object)*@
                    @Html.DisplayFor(m => m.Localidad, new { @class = "form-control" })
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.ParajeBarrioH)
                    @*@Html.EditorFor(m => m.ParajeBarrioH, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.ParajeBarrioH, new { @class = "form-control" })
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Partido)
                    @*@Html.TextBox("Partido", Model.Partido, !esSoloDetalle ? new { @class = "form-control selectize-partido" } : new { @class = "form-control", @readonly = "readonly" } as object)*@
                    @Html.DisplayFor(m => m.Partido, new { @class = "form-control" })
                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Provincia)

                    @if (Model.Provincia != null && Model.Provincia != "0")
                    {

                        var provincia = Model.ProvinciaList.FirstOrDefault(m => m.Value == Model.Provincia).Text;
                        @Html.Label(provincia);
                    }

                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.LocalidadPolicial)
                    @*@Html.EditorFor(m => m.LocalidadPolicial, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control selectize-localidad" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.LocalidadPolicial, new { @class = "form-control" })

                </div>
                <div class="col-xs-4">
                    @Html.Label("Dependencia Policial", new { id = "lblDependenciaPolicial", @for = "DependenciaPolicial" })
                    @if (!String.IsNullOrEmpty(Model.ComisariaMigracion))
                    {
                        <p>@Html.DisplayTextFor(x => x.ComisariaMigracion);</p>
                    }
                    else
                    {
                        @Html.DisplayFor(m => m.DependenciaPolicial, new { @class = "form-control" })
                    }



                </div>
            </div>
        </div>
    </div>

</section>

<section id="DomicilioDelito" style="display:none">

    <div class="panel panel-default tile wow fadeInDown animated">
        <div class="panel-heading">
            @*<div class="left wow fadeInDown animated" style="visibility: visible; animation-name: fadeInDown;">*@
            <h2>Domicilio del Delito</h2>
        </div>
        <div class="panel-body">
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.CalleDelito)
                    @*@Html.EditorFor(m => m.CalleDelito, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.CalleDelito, new { @class = "form-control" })
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.EntreCalleDelito)
                    @*@Html.EditorFor(m => m.EntreCalleDelito, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.EntreCalleDelito, new { @class = "form-control" })
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.EntreCalle2Delito)
                    @*@Html.EditorFor(m => m.EntreCalle2Delito, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.EntreCalle2Delito, new { @class = "form-control" })
                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.NroHDelito)
                    @*@Html.EditorFor(m => m.NroHDelito, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.NroHDelito, new { @class = "form-control" })
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.DeptoHDelito)
                    @*@Html.EditorFor(m => m.DeptoHDelito, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.DeptoHDelito, new { @class = "form-control" })
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.PisoHDelito)
                    @*@Html.EditorFor(m => m.PisoHDelito, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.PisoHDelito, new { @class = "form-control" })
                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.LocalidadDelito)
                    @*@Html.TextBox("LocalidadDelito", Model.LocalidadDelito, !esSoloDetalle ? new { @class = "form-control selectize-localidad" } : new { @class = "form-control", @readonly = "readonly" } as object)*@
                    @Html.DisplayFor(m => m.LocalidadDelito, new { @class = "form-control" })
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.ParajeBarrioHDelito)
                    @*@Html.EditorFor(m => m.ParajeBarrioHDelito, !esSoloDetalle ? new { htmlAttributes = new { @class = "form-control" } } : new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } } as object)*@
                    @Html.DisplayFor(m => m.ParajeBarrioHDelito, new { @class = "form-control" })
                </div>
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.PartidoDelito)
                    @*@Html.TextBox("PartidoDelito", Model.PartidoDelito, !esSoloDetalle ? new { @class = "form-control selectize-partido" } : new { @class = "form-control", @readonly = "readonly" } as object)*@
                    @Html.DisplayFor(m => m.PartidoDelito, new { @class = "form-control" })
                </div>
            </div>
            <div class="row wow fadeInDown animated" data-wow-delay=" 300ms" data-wow-duration="500ms" style="visibility: visible; animation-duration: 500ms; animation-delay: 300ms; animation-name: fadeInDown;">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.ProvinciaDelito)

                    @if (Model.ProvinciaDelito != null && Model.ProvinciaDelito != "0")
                    {
                        var provDelito = Model.ProvinciaList.First(m => m.Value == Model.ProvinciaDelito).Text;
                        @Html.Label(provDelito);
                    }
                </div>
                <div class="col-xs-8">

                </div>
            </div>
        </div>
    </div>

</section>
