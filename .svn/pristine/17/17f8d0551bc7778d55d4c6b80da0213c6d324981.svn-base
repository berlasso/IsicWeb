@using System.Web.UI.WebControls
@model ISICWeb.Areas.Antecedentes.Models.MigracionesViewModel
@{ string url = Session["CurrentUrl"] != null ? Session["CurrentUrl"].ToString() : @Url.Action("Index", "Antecedentes"); }

@using (Ajax.BeginForm("GuardarDatosMigraciones", "AntecedentesMigraciones",
  new AjaxOptions
                {
                    UpdateTargetId = "divValidation",
                    HttpMethod = "Post",
                    OnBegin = "onGuardarBegin",
                    OnComplete = "onGuardarComplete",
                    OnSuccess = "onGuardarSuccess"
                },
                new { id = "frmGuardarDatosMigraciones" }))
{    @Html.AntiForgeryToken()
    <div class="row wow fadeInDown animated">
        <ol class="breadcrumb hidden-xs tile-light" style="float: left !important">
            <li>@Html.ActionLink("Búsqueda", "Index", "Antecedentes")</li>
            <li><a href="@url">Resultados</a></li>
            <li>@Html.ActionLink("Listado Migraciones", "BuscarFichasMigraciones", new { prontuariosic = Model.Prontuario.ProntuarioNro }, new { onclick = "showPageLoadingSpinner();" })</li>
            <li class="active">Carga Migraciones</li>
        </ol>
    </div>

    <div class=" center wow fadeInDown animated tile-light">
        <h3>
            Carga datos del Migraciones
        </h3>
    </div>


    if (Model != null)
    {
        Html.RenderAction("MostrarDatosImputado", "Antecedentes", new { idIdgxprontuario = Model.Id });

    }
    <div class="panel panel-default tile wow fadeInDown animated" style="margin-bottom: 80px;">
        <div class="panel-heading">
            @if (Model.Id > 0)
            {
                <h4><b style="color: red">Modificación</b> Datos del Migraciones</h4>
            }
            else
            {
                <h4>Carga Nuevos Datos del Migraciones</h4>


            }
        </div>
        <div class="panel-body">


            <div class="row wow fadeInDown animated">

                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Fechainicio, htmlAttributes: new { @class = "control-label " })
                    @Html.TextBoxFor(model => model.Fechainicio, "{0:dd/MM/yyyy}",new {@class="form-control fecha datepicker"})
                    @Html.ValidationMessageFor(model => model.Fechainicio, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Tema, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Tema, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tema, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Titular, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.Titular, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Titular, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.FecNacim, htmlAttributes: new { @class = "control-label " })
                    @Html.TextBoxFor(model => model.FecNacim, "{0:dd/MM/yyyy}", new { @class = "form-control fecha datepicker" })
                    @Html.ValidationMessageFor(model => model.FecNacim, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row wow fadeInDown animated">

                <div class="col-xs-3">
                    @Html.LabelFor(model => model.DocumentoNumero, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.DocumentoNumero, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DocumentoNumero, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.EmisorDocumento, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.EmisorDocumento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmisorDocumento, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.NroExpAjeno, htmlAttributes: new { @class = "control-label " })
                    @Html.EditorFor(model => model.NroExpAjeno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NroExpAjeno, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.FechaExp, htmlAttributes: new { @class = "control-label " })

                    @Html.TextBoxFor(model => model.FechaExp, "{0:dd/MM/yyyy}", new { @class = "form-control fecha datepicker" })
                    @Html.ValidationMessageFor(model => model.FechaExp, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row wow fadeInDown animated">

                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Comentario, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.Comentario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Comentario, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Calificacion, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.Calificacion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Calificacion, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.NroActoAnio, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.NroActoAnio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NroActoAnio, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Delegacion, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.Delegacion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Delegacion, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="row wow fadeInDown animated">
                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Organismo, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.Organismo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Organismo, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Profesion, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.Profesion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Profesion, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.ResideDesde, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.ResideDesde, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ResideDesde, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.FechaRadica, htmlAttributes: new { @class = "control-label " })

                    @Html.TextBoxFor(model => model.FechaRadica, "{0:dd/MM/yyyy}", new { @class = "form-control fecha datepicker" })
                    @Html.ValidationMessageFor(model => model.FechaRadica, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="row wow fadeInDown animated">
                <div class="col-xs-3">
                    @Html.LabelFor(model => model.NroExpediente, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.NroExpediente, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NroExpediente, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.TipoJusticia, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.TipoJusticia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TipoJusticia, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.Observaciones, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
                </div>
                <div class="col-xs-3">
                    @Html.LabelFor(model => model.NroCausa, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.NroCausa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NroCausa, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row wow fadeInDown animated">
                <div class="col-xs-3">
                    @Html.LabelFor(model => model.JuzgadoTxt, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.JuzgadoTxt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JuzgadoTxt, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.MotivoCausa, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.MotivoCausa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MotivoCausa, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.JuezCausa, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.JuezCausa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JuezCausa, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.PlazoCausaMD, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.PlazoCausaMD, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PlazoCausaMD, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="row wow fadeInDown animated">
                <div class="col-xs-3">
                    @Html.LabelFor(model => model.TipoRestriccion, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.TipoRestriccion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TipoRestriccion, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Instancia, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.Instancia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Instancia, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.DescCausa, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.DescCausa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DescCausa, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Instruccion, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.Instruccion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Instruccion, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="row wow fadeInDown animated">
                <div class="col-xs-3">
                    @Html.LabelFor(model => model.LugarInicio, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.LugarInicio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LugarInicio, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.LugarEntrada, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.LugarEntrada, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LugarEntrada, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.FechaUltimoIngreso, htmlAttributes: new { @class = "control-label " })

                    @Html.TextBoxFor(model => model.FechaUltimoIngreso, "{0:dd/MM/yyyy}", new { @class = "form-control fecha datepicker" })
                    @Html.ValidationMessageFor(model => model.FechaUltimoIngreso, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.TipoResolucion, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.TipoResolucion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TipoResolucion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row wow fadeInDown animated">

                <div class="col-xs-3">
                    @Html.LabelFor(model => model.FechaResolucion, htmlAttributes: new { @class = "control-label " })

                    @Html.TextBoxFor(model => model.FechaResolucion, "{0:dd/MM/yyyy}", new { @class = "form-control fecha datepicker" })
                    @Html.ValidationMessageFor(model => model.FechaResolucion, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.NroDisposicion, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.NroDisposicion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NroDisposicion, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.FechaDisposicion, htmlAttributes: new { @class = "control-label " })

                    @Html.TextBoxFor(model => model.FechaDisposicion, "{0:dd/MM/yyyy}", new { @class = "form-control fecha datepicker" })
                    @Html.ValidationMessageFor(model => model.FechaDisposicion, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.NroCertificado, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.NroCertificado, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NroCertificado, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row wow fadeInDown animated">

                <div class="col-xs-3">
                    @Html.LabelFor(model => model.FechaCertificado, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.FechaCertificado, new { htmlAttributes = new { @class = "form-control fecha datepicker" } })
                    @Html.ValidationMessageFor(model => model.FechaCertificado, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.NroExpedienteAnterior, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.NroExpedienteAnterior, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NroExpedienteAnterior, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.FechaIngresoSistema, htmlAttributes: new { @class = "control-label " })

                    @Html.TextBoxFor(model => model.FechaIngresoSistema, "{0:dd/MM/yyyy}", new { @class = "form-control fecha datepicker" })
                    @Html.ValidationMessageFor(model => model.FechaIngresoSistema, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.Religion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="row wow fadeInDown animated">
                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Policia, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.Policia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Policia, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.FamiliarRadicado, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.FamiliarRadicado, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FamiliarRadicado, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.EnferFamiliar, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.EnferFamiliar, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EnferFamiliar, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.NombrePadre, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.NombrePadre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NombrePadre, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="row wow fadeInDown animated">
                <div class="col-xs-3">
                    @Html.LabelFor(model => model.NombreMadre, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.NombreMadre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NombreMadre, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.TipoSolicitud, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.TipoSolicitud, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TipoSolicitud, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.FechaPrecaria, htmlAttributes: new { @class = "control-label " })

                    @Html.TextBoxFor(model => model.FechaPrecaria, "{0:dd/MM/yyyy}", new { @class = "form-control fecha datepicker" })
                    @Html.ValidationMessageFor(model => model.FechaPrecaria, "", new { @class = "text-danger" })
                </div>


                <div class="col-xs-3">
                    @Html.LabelFor(model => model.DiasPrecaria, htmlAttributes: new { @class = "control-label " })

                    @Html.EditorFor(model => model.DiasPrecaria, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DiasPrecaria, "", new { @class = "text-danger" })
                </div>
            </div>
        <div class="row wow fadeInDown animated">

            <div class="col-xs-3">
                @Html.LabelFor(model => model.NroEntOficios, htmlAttributes: new {@class = "control-label "})

                @Html.EditorFor(model => model.NroEntOficios, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.NroEntOficios, "", new {@class = "text-danger"})
            </div>


            <div class="col-xs-3">
                @Html.LabelFor(model => model.FechaEntOficios, htmlAttributes: new {@class = "control-label "})

                @Html.TextBoxFor(model => model.FechaEntOficios, "{0:dd/MM/yyyy}", new { @class = "form-control fecha datepicker" })
                @Html.ValidationMessageFor(model => model.FechaEntOficios, "", new {@class = "text-danger"})
            </div>


            <div class="col-xs-3">
                @Html.LabelFor(model => model.Caratula, htmlAttributes: new {@class = "control-label "})

                @Html.EditorFor(model => model.Caratula, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Caratula, "", new {@class = "text-danger"})
            </div>


            <div class="col-xs-3">
                @Html.LabelFor(model => model.ExpedienteMigraciones, htmlAttributes: new {@class = "control-label "})
                @Html.DropDownListFor(x => x.ExpedienteMigraciones.Id, Model.ExpedienteList as SelectList, new {@class = "form-control"})


            </div>
        </div>
        <div class="row wow fadeInDown animated">
            <div class="col-xs-3">
                @Html.LabelFor(model => model.EstadoCivil, htmlAttributes: new {@class = "control-label "})
                @Html.DropDownListFor(x => x.EstadoCivil.Id, Model.EstadoCivilList as SelectList, new {@class = "form-control"})


            </div>
            <div class="col-xs-3">
                @Html.LabelFor(model => model.Sexo, htmlAttributes: new {@class = "control-label "})
                @Html.DropDownListFor(x => x.Sexo.Id, Model.SexoList as SelectList, new {@class = "form-control"})


            </div>
            <div class="col-xs-3">
                @Html.LabelFor(model => model.TipoDNI, htmlAttributes: new {@class = "control-label "})
                @Html.DropDownListFor(x => x.TipoDNI.Id, Model.TipoDocList as SelectList, new {@class = "form-control"})


            </div>
            <div class="col-xs-3">
                @Html.LabelFor(model => model.PaisEmbarque, htmlAttributes: new {@class = "control-label "})
                @Html.DropDownListFor(x => x.PaisEmbarque.Id, Model.PaisList as SelectList,  new { @class = "form-control" })


            </div>
        </div>
        <div class="row wow fadeInDown animated">
            <div class="col-xs-3">
                @Html.LabelFor(model => model.Domicilio, htmlAttributes: new {@class = "control-label "})

                @Html.EditorFor(model => model.Domicilio, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Domicilio, "", new {@class = "text-danger"})
            </div>


            <div class="col-xs-3">
                @Html.HiddenFor(model => model.LocalidadJusticia.Id)
                @Html.LabelFor(model => model.LocalidadJusticia, htmlAttributes: new {@class = "control-label "})

                @Html.EditorFor(model => model.LocalidadJusticia.LocalidadNombre, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.LocalidadJusticia, "", new {@class = "text-danger"})


            </div>
            <div class="row wow fadeInDown animated">
                <div class="col-xs-3">
                    @Html.LabelFor(model => model.FechaInforme)
                    @Html.EditorFor(model => model.FechaInforme, new {htmlAttributes = new {@class = "form-control datepicker"}})
                    @Html.ValidationMessageFor(model => model.FechaInforme, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

                    <div class="row wow fadeInDown animated">
                        <div class="col-md-12" id="divValidation">
                            @Html.HiddenFor(model => model.Prontuario.Id)
                            @Html.HiddenFor(model => model.Prontuario.ProntuarioNro)
                            @Html.HiddenFor(model => model.FechaCreacion)
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id)

                        </div>
                    </div>

                </div>
            </div>
    <nav class="navbar navbar-default navbar-fixed-bottom tile-dark">
        <div class="row">
            <div class="  col-sm-3 col-xs-3">
                @Html.ActionLink("Volver", "BuscarFichasMigraciones", new { prontuariosic = Model.Prontuario.ProntuarioNro }, new { @class = "btn btn-alt btn-lg", onclick = "showPageLoadingSpinner();" })



            </div>
            <div class="col-md-3 col-md-offset-2 col-sm-4 col-xs-8">
                <div class="row ">
                    <div class="col-md-6 col-sm-6 col-xs-6">
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-6">
                        <input type="submit" value="Guardar" class="btn btn-alt btn-lg" />

                    </div>
                </div>
            </div>

        </div>

    </nav>
}

@section scripts
        {
    <script>
        //GUARDAR DATOS MIGRACIONES
        function onGuardarBegin() {
            loader("Guardando, espere un momento...");
        }

        function onGuardarComplete() {
            $.unblockUI();
        }

        function onGuardarSuccess(data) {
            if (data == "") {
                //alertify.success("Alta exitosa");
                var url = '@Url.Content("BuscarFichasMigraciones")?prontuariosic=@Model.Prontuario.ProntuarioNro';
                alertify.alert("Exito", "<i class='Exito'>Carga Exitosa</i>").set({
                    onclose: function () {
                        showPageLoadingSpinner();
                        location.href = url;

                    }
                });



            } else {
                alertify.error("Error en la carga");
                
                    $("html, body").animate({ scrollTop: $(document).height() }, "slow");
                
            }
        }

    
        $(document).ready(function () {
            $('.fecha').bind('keyup keypress blur change cut copy paste ', function () {
                var validator = $("#frmGuardarDatosMigraciones").validate();
                validator.element(this);
            });
            $("#navFooter").hide();
        });

        $('#LocalidadJusticia_LocalidadNombre').bind('autocompleteselect', function (event, ui) {
            $("#LocalidadJusticia_Id").val(ui.item.id);
        });


        $("#LocalidadJusticia_LocalidadNombre").on("autocompletechange", function (event, ui) {
            if (this.value.trim() === '') {
                $("#LocalidadJusticia_Id").val("0");
            }
            if ($("#LocalidadJusticia_Id").val().trim() === "0") {
                this.value = "";
            };

        });

        $("#LocalidadJusticia_LocalidadNombre").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("BuscarLocalidad", "Antecedentes")',
                    type: "GET",
                    dataType: "json",
                    autoFocus: true,
                    minLength: 3,
                    data: { term: request.term },

                    success: function (data) {
                        $("#LocalidadJusticia_Id").val("0");
                        response($.map(data, function (item) {

                            return { label: item.label, value: item.label, id: item.id };
                        }));
                    }
                });
            },
        });
    </script>
}
